**********************************************************************************************************
                                       Main Class
**********************************************************************************************************
public class Main {
    public static void main(String[] args) {

        new Frame();
    }
}

**********************************************************************************************************
                                JFrame(separate class)
**********************************************************************************************************
import javax.swing.*;
import java.awt.*;

public class Frame extends JFrame {
Image icon;
    Frame(){
        ElevatorPanel elevatorPanel = new ElevatorPanel();
        icon  = new ImageIcon("Elevator\\Resources\\elevatorIcon.png").getImage();
        this.setSize(elevatorPanel.PANEL_WIDTH, elevatorPanel.PANEL_HEIGHT);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setIconImage(icon);
        this.setTitle("Elevator");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.add(elevatorPanel);
        this.setVisible(true);

    }

}


**********************************************************************************************************
                               JPanel(class) and Buttons(each is a subclass)
**********************************************************************************************************
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;



public class ElevatorPanel extends JPanel implements ActionListener {

    final int PANEL_HEIGHT = 800;
    final int PANEL_WIDTH = 800;
    final int BUTTON_HEIGHT = 35;
    final int BUTTON_WIDTH = 35;

    int xPosition = 115;
    int yPosition = 620;
    Image elevator;
    ImageIcon shaft;
    ImageIcon consoleFrameImage;

    //Buttons and timer defined globally
    Floor1 floor1 = new Floor1();
    Floor2 floor2 = new Floor2();
    Floor3 floor3 = new Floor3();
    Floor4 floor4 = new Floor4();
    Floor5 floor5 = new Floor5();
    Floor6 floor6 = new Floor6();

    GroundLevel groundLevel = new GroundLevel();
    JButton reset = new JButton();
    public Timer timer = new Timer(5,this);
    ElevatorPanel() {

        ////////////////////////// Images ///////////////////////////////////////////////
        elevator = new ImageIcon("Elevator\\Resources\\Elevator.png").getImage();
        shaft = new ImageIcon("Elevator\\Resources\\Shaft.png");
        consoleFrameImage = new ImageIcon("Elevator\\Resources\\ConsoleFrame.png");
        /////////////////////////////////////////////////////////////////////////////////

        reset.setBounds(485, 550, 80, BUTTON_HEIGHT);
        reset.setText("Reset");
        reset.setFocusable(false);
        reset.setBackground(new Color(250,100,0));
        reset.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                yPosition = 620;
                repaint();
                timer.stop();
                groundLevel.groundLevelTimer.stop();
                floor1.floor1Timer.stop();
                floor2.floor2Timer.stop();
                floor3.floor3Timer.stop();
                floor4.floor4Timer.stop();
                floor5.floor5Timer.stop();
                floor6.floor6Timer.stop();
            }
        } );


        this.setOpaque(true);
        this.setBackground(Color.black);
        this.setPreferredSize(new Dimension(PANEL_WIDTH, PANEL_HEIGHT));
        this.setLayout(null);


        // Labels //
        JLabel consoleFrame = new JLabel(consoleFrameImage);
        consoleFrame.setBounds(475,300,98,300);
        this.add(consoleFrame);

        JLabel shaftLbl = new JLabel(shaft);
        shaftLbl.setBounds(0,0,300, PANEL_HEIGHT);
        this.add(shaftLbl);
        ////////////////////

        ///// Buttons ////////
        this.add(groundLevel);
        this.add(reset);
        this.add(floor1);
        this.add(floor2);
        this.add(floor3);
        this.add(floor4);
        this.add(floor5);
        this.add(floor6);

        //////////////////////
    }
    @Override
    public void paint(Graphics g) {
        Graphics2D g2D = (Graphics2D) g;
        super.paint(g);
        g2D.drawImage(elevator, xPosition, yPosition, null);

    }
// bug-proof conditions
    @Override
    public void actionPerformed(ActionEvent e) {
        repaint();
        if (groundLevel.getModel().isPressed()) {
            floor1.floor1Timer.stop();
            floor2.floor2Timer.stop();
            floor3.floor3Timer.stop();
            floor4.floor4Timer.stop();
            floor5.floor5Timer.stop();
            floor6.floor6Timer.stop();
        }
        //Floor1
        if (floor1.getModel().isPressed()) {
            floor2.floor2Timer.stop();
            floor3.floor3Timer.stop();
            floor4.floor4Timer.stop();
            floor5.floor5Timer.stop();
            floor6.floor6Timer.stop();
            groundLevel.groundLevelTimer.stop();
        }
        //Floor2
        if (floor2.getModel().isPressed()) {
            floor1.floor1Timer.stop();
            floor3.floor3Timer.stop();
            floor4.floor4Timer.stop();
            floor5.floor5Timer.stop();
            floor6.floor6Timer.stop();
            groundLevel.groundLevelTimer.stop();
        }
        //Floor3
        if (floor3.getModel().isPressed()) {
            floor1.floor1Timer.stop();
            floor2.floor2Timer.stop();
            floor4.floor4Timer.stop();
            floor5.floor5Timer.stop();
            floor6.floor6Timer.stop();
            groundLevel.groundLevelTimer.stop();
        }
        //Floor4
        if (floor4.getModel().isPressed()) {
            floor1.floor1Timer.stop();
            floor2.floor2Timer.stop();
            floor3.floor3Timer.stop();
            floor5.floor5Timer.stop();
            floor6.floor6Timer.stop();
            groundLevel.groundLevelTimer.stop();
        }
        //Floor5
        if (floor5.getModel().isPressed()) {
            floor1.floor1Timer.stop();
            floor2.floor2Timer.stop();
            floor3.floor3Timer.stop();
            floor4.floor4Timer.stop();
            floor6.floor6Timer.stop();
            groundLevel.groundLevelTimer.stop();
        }
        //Floor6
        if (floor6.getModel().isPressed()) {
            floor1.floor1Timer.stop();
            floor2.floor2Timer.stop();
            floor3.floor3Timer.stop();
            floor4.floor4Timer.stop();
            floor5.floor5Timer.stop();
            groundLevel.groundLevelTimer.stop();
        }
    }
//Buttons are defined as subclasses of the JPanel class, in order to use multiple action listeners
////////////////////////////////////////////        BUTTONS       ////////////////////////////////////
    final int xPositionColumn1 = 485;
    final int xPositionColumn2 = 530;
    public class GroundLevel extends JButton {

    public Timer groundLevelTimer = new Timer(5, this.actionListener);
    GroundLevel(){

        this.setBounds(xPositionColumn1, 500, 80, BUTTON_HEIGHT);
        this.setText("Ground");
        this.setFocusable(false);
        this.setBorder(null);
        this.setBackground(Color.lightGray);
        this.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if (yPosition > 620) {
                    groundLevelTimer.start();
                    yPosition--;
                    repaint();
                    timer.start();
                }
                if (yPosition == 620) {
                    groundLevelTimer.stop();
                    timer.stop();
                }
                if (yPosition < 620) {
                    groundLevelTimer.start();
                    yPosition +=2;
                    repaint();
                    timer.start();
                }
            }
        });
    }
}
    public class Floor1 extends JButton {
    final int vertFloor1 = 525;
    public Timer floor1Timer = new Timer(5, this.actionListener);
    Floor1(){


            this.setBounds(xPositionColumn1, 450, BUTTON_WIDTH, BUTTON_HEIGHT);
            this.setText("1");
            this.setFocusable(false);
            this.setBorder(null);
            this.setBackground(Color.lightGray);
            this.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {

                    if (yPosition > vertFloor1) {
                        floor1Timer.start();
                        yPosition-=2;
                        repaint();
                        timer.start();
                    }
                    if (yPosition == vertFloor1) {
                        floor1Timer.stop();
                        timer.stop();
                    }
                    if (yPosition < vertFloor1) {
                        floor1Timer.start();
                        yPosition += 2;
                        repaint();
                        timer.start();
                    }
                }
            });
        }
}
    public class Floor2 extends JButton {
    final int vertFloor2 = 440;
        public Timer floor2Timer = new Timer(5, this.actionListener);
        Floor2(){

            this.setBounds(xPositionColumn1, 400, BUTTON_WIDTH, BUTTON_HEIGHT);
            this.setText("2");
            this.setFocusable(false);
            this.setBorder(null);
            this.setBackground(Color.lightGray);
            this.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(yPosition > vertFloor2) {
                        floor2Timer.start();
                        yPosition -=2;
                        repaint();
                        timer.start();
                    }
                    if(yPosition == vertFloor2){
                        floor2Timer.stop();
                        timer.stop();
                    }
                    if(yPosition < vertFloor2){
                        floor2Timer.start();
                        yPosition += 2;
                        repaint();
                        timer.start();
                    }
                }
            });
        }

    }
    public class Floor3 extends JButton {
        final int vertFloor3 = 356;
        public Timer floor3Timer = new Timer(5, this.actionListener);
        Floor3(){

            this.setBounds(xPositionColumn1, 350, BUTTON_WIDTH, BUTTON_HEIGHT);
            this.setText("3");
            this.setFocusable(false);
            this.setBorder(null);
            this.setBackground(Color.lightGray);
            this.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(yPosition > vertFloor3) {
                        floor3Timer.start();
                        yPosition -=2;
                        repaint();
                        timer.start();
                    }
                    if(yPosition == vertFloor3){
                        floor3Timer.stop();
                        timer.stop();
                    }
                    if(yPosition < vertFloor3){
                        floor3Timer.start();
                        yPosition += 2;
                        repaint();
                        timer.start();
                    }
                }
            });
        }

    }
    public class Floor4 extends JButton {
        final int vertFloor4 = 272;
        public Timer floor4Timer = new Timer(5, this.actionListener);
        Floor4(){

            this.setBounds(xPositionColumn2, 450, BUTTON_WIDTH, BUTTON_HEIGHT);
            this.setText("4");
            this.setFocusable(false);
            this.setBorder(null);
            this.setBackground(Color.lightGray);
            this.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(yPosition > vertFloor4) {
                        floor4Timer.start();
                        yPosition -=2;
                        repaint();
                        timer.start();
                    }
                    if(yPosition == vertFloor4){
                        floor4Timer.stop();
                        timer.stop();
                    }
                    if(yPosition < vertFloor4){
                        floor4Timer.start();
                        yPosition += 2;
                        repaint();
                        timer.start();
                    }
                }
            });
        }

    }
    public class Floor5 extends JButton {
        final int vertFloor5 = 188;
        public Timer floor5Timer = new Timer(5, this.actionListener);
        Floor5(){

            this.setBounds(xPositionColumn2, 400, BUTTON_WIDTH, BUTTON_HEIGHT);
            this.setText("5");
            this.setFocusable(false);
            this.setBorder(null);
            this.setBackground(Color.lightGray);
            this.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(yPosition > vertFloor5) {
                        floor5Timer.start();
                        yPosition -=2;
                        repaint();
                        timer.start();
                    }
                    if(yPosition == vertFloor5){
                        floor5Timer.stop();
                        timer.stop();
                    }
                    if(yPosition < vertFloor5){
                        floor5Timer.start();
                        yPosition += 2;
                        repaint();
                        timer.start();
                    }
                }
            });
        }

    }
    public class Floor6 extends JButton {
        final int vertFloor6 = 104;
        public Timer floor6Timer = new Timer(5, this.actionListener);
        Floor6(){

            this.setBounds(xPositionColumn2, 350, BUTTON_WIDTH, BUTTON_HEIGHT);
            this.setText("6");
            this.setFocusable(false);
            this.setBorder(null);
            this.setBackground(Color.lightGray);
            this.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(yPosition > vertFloor6) {
                        floor6Timer.start();
                        yPosition -=2;
                        repaint();
                        timer.start();
                    }
                    if(yPosition == vertFloor6){
                        floor6Timer.stop();
                        timer.stop();
                    }
                    if(yPosition < vertFloor6){
                        floor6Timer.start();
                        yPosition += 2;
                        repaint();
                        timer.start();
                    }
                }
            });
        }

    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
}
**********************************************************************************************************
